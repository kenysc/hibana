# automatic
@Uppercase = [ A Aacute Abreve Acaron Acircumflex Adieresis Agrave Amacron Aogonek Aring Atilde AE B C Cacute Ccaron Ccedilla Cdotaccent D Eth Dcaron Dcroat E Eacute Ecaron Ecircumflex Edieresis Edotaccent Egrave Emacron Eogonek F G Gbreve Gcommaaccent Gdotaccent H Hbar I Iacute Icaron Icircumflex Idieresis Idotaccent Igrave Imacron Iogonek J K Kcommaaccent L Lacute Lcaron Lcommaaccent Lslash M N Nacute Ncaron Ncommaaccent Eng Ntilde O Oacute Ocaron Ocircumflex Odieresis Ograve Ohungarumlaut Omacron Oslash Otilde OE P Thorn Q R Racute Rcaron Rcommaaccent S Sacute Scaron Scedilla Scommaaccent Germandbls T Tbar Tcaron Tcedilla Tcommaaccent U Uacute Ucaron Ucircumflex Udieresis Udieresisacute Udieresiscaron Udieresisgrave Udieresismacron Ugrave Uhungarumlaut Umacron Uogonek Uring V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ygrave Z Zacute Zcaron Zdotaccent G.ss02 S.ss02 Q.ss03 ];

# Prefix: Languagesystems
# automatic
languagesystem DFLT dflt;

languagesystem latn dflt;
languagesystem latn AZE;
languagesystem latn CRT;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn ROM;
languagesystem latn MOL;

feature aalt {
# automatic
feature locl;
feature subs;
feature sinf;
feature sups;
feature numr;
feature dnom;
feature frac;
feature ordn;
feature zero;
feature fwid;
feature salt;
feature ss01;
feature ss02;
feature ss03;
feature ss04;
} aalt;

feature ccmp {
# automatic
lookup ccmp_Other_1 {
	@CombiningTopAccents = [acutecomb brevecomb caroncomb circumflexcomb commaturnedabovecomb dblgravecomb dieresiscomb dotaccentcomb gravecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	@CombiningNonTopAccents = [cedillacomb ogonekcomb tildebelowcomb];
	sub [i]' @CombiningTopAccents by [idotless];
	sub [i]' @CombiningNonTopAccents @CombiningTopAccents by [idotless];
} ccmp_Other_1;
} ccmp;

feature locl {
# automatic
lookup locl_latn_0 {
	script latn;
	language AZE;
	language CRT;
	language KAZ;
	language TAT;
	language TRK;
	sub i by idotaccent;
} locl_latn_0;

lookup locl_latn_1 {
	script latn;
	language ROM;
	language MOL;
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
} locl_latn_1;
} locl;

feature subs {
# automatic
sub parenleft by parenleftinferior;
sub parenright by parenrightinferior;
} subs;

feature sinf {
# automatic
sub parenleft by parenleftinferior;
sub parenright by parenrightinferior;
} sinf;

feature sups {
# automatic
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
} sups;

feature numr {
# automatic
sub zero by zero.numr;
sub one by one.numr;
sub two by two.numr;
sub three by three.numr;
sub four by four.numr;
sub five by five.numr;
sub six by six.numr;
sub seven by seven.numr;
sub eight by eight.numr;
sub nine by nine.numr;
} numr;

feature dnom {
# automatic
sub one by one.dnom;
sub two by two.dnom;
sub three by three.dnom;
sub four by four.dnom;
sub five by five.dnom;
sub six by six.dnom;
sub seven by seven.dnom;
sub eight by eight.dnom;
sub nine by nine.dnom;
} dnom;

feature frac {
# automatic
sub one slash eight by oneeighth;
sub one slash four by onequarter;
sub three slash eight by threeeighths;
sub one slash two by onehalf;
sub five slash eight by fiveeighths;
sub three slash four by threequarters;
sub seven slash eight by seveneighths;
} frac;

feature ordn {
# automatic
sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
sub N o period by numero;
} ordn;

feature dlig {
# automatic
lookupflag IgnoreMarks;
sub f f b by f_f_b;
sub f f h by f_f_h;
sub f f j by f_f_j;
sub f f k by f_f_k;
sub f f t by f_f_t;
sub T h by T_h;
sub f b by f_b;
sub f h by f_h;
sub f j by f_j;
sub f k by f_k;
sub f t by f_t;
} dlig;

feature liga {
# automatic
lookupflag IgnoreMarks;
sub f f i by f_f_i;
sub f f l by f_f_l;
sub f f by f_f;
sub f i by fi;
sub f l by fl;
} liga;

feature zero {
# automatic
sub zero by zero.zero;
} zero;

feature fwid {
# automatic
sub space by emspace;
sub colon by colon.full;
sub comma by comma.full;
sub exclam by exclam.full;
sub question by question.full;
sub semicolon by semicolon.full;
sub parenleft by parenleft.full;
sub parenright by parenright.full;
} fwid;

feature salt {
# automatic
sub a by a.ss01;
sub aacute by aacute.ss01;
sub abreve by abreve.ss01;
sub acaron by acaron.ss01;
sub acircumflex by acircumflex.ss01;
sub adieresis by adieresis.ss01;
sub agrave by agrave.ss01;
sub amacron by amacron.ss01;
sub aogonek by aogonek.ss01;
sub aring by aring.ss01;
sub atilde by atilde.ss01;
} salt;

feature ss01 {
# automatic
sub a by a.ss01;
sub aacute by aacute.ss01;
sub abreve by abreve.ss01;
sub acaron by acaron.ss01;
sub acircumflex by acircumflex.ss01;
sub adieresis by adieresis.ss01;
sub agrave by agrave.ss01;
sub amacron by amacron.ss01;
sub aogonek by aogonek.ss01;
sub aring by aring.ss01;
sub atilde by atilde.ss01;
} ss01;

feature ss02 {
# automatic
sub G by G.ss02;
sub Gbreve by Gbreve.ss02;
sub Gcommaaccent by Gcommaaccent.ss02;
sub Gdotaccent by Gdotaccent.ss02;
sub S by S.ss02;
sub Sacute by Sacute.ss02;
sub Scaron by Scaron.ss02;
sub Scedilla by Scedilla.ss02;
sub Scommaaccent by Scommaaccent.ss02;
sub a by a.ss02;
sub aacute by aacute.ss02;
sub abreve by abreve.ss02;
sub acaron by acaron.ss02;
sub acircumflex by acircumflex.ss02;
sub adieresis by adieresis.ss02;
sub agrave by agrave.ss02;
sub amacron by amacron.ss02;
sub aogonek by aogonek.ss02;
sub aring by aring.ss02;
sub atilde by atilde.ss02;
sub e by e.ss02;
sub eacute by eacute.ss02;
sub ecaron by ecaron.ss02;
sub ecircumflex by ecircumflex.ss02;
sub edieresis by edieresis.ss02;
sub edotaccent by edotaccent.ss02;
sub egrave by egrave.ss02;
sub emacron by emacron.ss02;
sub eogonek by eogonek.ss02;
sub g by g.ss02;
sub gbreve by gbreve.ss02;
sub gcommaaccent by gcommaaccent.ss02;
sub gdotaccent by gdotaccent.ss02;
sub s by s.ss02;
sub sacute by sacute.ss02;
sub scaron by scaron.ss02;
sub scedilla by scedilla.ss02;
sub scommaaccent by scommaaccent.ss02;
} ss02;

feature ss03 {
# automatic
sub Q by Q.ss03;
} ss03;

feature ss04 {
# automatic
sub g by g.ss04;
sub gbreve by gbreve.ss04;
sub gcommaaccent by gcommaaccent.ss04;
sub gdotaccent by gdotaccent.ss04;
} ss04;

